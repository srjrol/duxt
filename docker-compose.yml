version: '3.9'

services:
  database:
    image: postgis/postgis:latest
    container_name: directus_database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - directus_data:/var/lib/postgresql/data
      - ~/postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - directus_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "directus"]
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - "com.example.service=Database Service"

  directus:
      image: directus/directus:latest
      container_name: directus_app
      environment:
        PUBLIC_URL: ${PUBLIC_URL}
        KEY: ${DIRECTUS_KEY}
        SECRET: ${DIRECTUS_SECRET}
        DB_CLIENT: pg
        DB_HOST: database
        DB_PORT: 5432
        DB_DATABASE: ${POSTGRES_DB}
        DB_USER: ${POSTGRES_USER}
        DB_PASSWORD: ${POSTGRES_PASSWORD}
        ADMIN_EMAIL: ${ADMIN_EMAIL}
        ADMIN_PASSWORD: ${ADMIN_PASSWORD}
        CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_ANCESTORS: "array:http://localhost:3000 http://localhost:8055,self"
        CORS_ENABLED: 'true'
        CORS_ORIGIN: 'http://localhost:3000'

      depends_on:
        - database
      ports:
        - "8055:8055"
      restart: unless-stopped
      networks:
        - directus_network
      labels:
        - "com.example.service=Directus Service"

networks:
  directus_network:
    driver: bridge

volumes:
  directus_data: